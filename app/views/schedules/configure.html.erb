<% HistoryHelper.set_back(request) %>

<table style="width:100%; margin-top:10px;">
  <tr>
    <td style="width:49%; vertical-align:top;" >

      <div class="info_area" style="width:100%; padding:15px 0px; text-align:center;" >
        <table style="margin:0px auto; width:85%; border-spacing:2px;">
          <tr>
            <td class="item_cap_td" nowrap style="width:100%;" colspan="2">
              <%= t('msg.holidays') %>
            </td>
          </tr>
          <tr>
            <td style="text-align:center; padding-top:10px;">
              <table>
                <tr>
                  <td id="div_holidays">
                    <%= render(:partial => 'config_holidays') %>
                  </td>
                  <td style="width:10px;">&nbsp;</td>
                  <td style="vertical-align:top;">
                    <table style="width:100%;">
                      <tr>
                        <td style="text-align:center;">
                          <input type="button" value="<%= t('btn.add') %>" onclick="addHolidays();" style="width:80px;">
                        </td>
                      </tr>
                      <tr style="height:5px;"><td></td></tr>
                      <tr>
                        <td style="text-align:center;">
                          <input type="button" value="<%= t('btn.remove') %>" onclick="removeHolidays();" style="width:80px;">
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </td>
          </tr>
        </table>
      </div>

    </td>
    <td style="width:10px;">&nbsp;</td>
    <td style="width:49%; vertical-align:top;">


    </td>
  </tr>
</table>

<table style="margin:20px auto 10px;">
  <tr>
    <td class="img_button_td" onclick="prog('TOP-RIGHT'); location.href='<%= url_for(:controller => 'history', :action => 'back') %>';">
      <%= t('btn.back') %>
    </td>
  </tr>
</table>
<br/>

<script type="text/javascript">

function doAddHolidays(frm)
{
  var ret = _addHolidays(frm.thetisBoxEdit.value);
  if (!ret) {
    return false;
  }

  var thetisBoxProgress = prog("TOP-RIGHT");

  new Ajax.Updater(
      "div_holidays",
      "<%= url_for(:controller => 'schedules', :action => 'add_holidays') %>",
      {
        method:"post",
        parameters:Form.serialize(frm),
        asynchronous:true,
        evalScripts:true,
        onComplete:function(request){
          thetisBoxProgress.remove();

          var boxInstance = ThetisBox.getInstanceForElem(frm);
          if (boxInstance) {
            boxInstance.remove();
          }
        }
      }
    );
}

function addHolidays()
{
  var thetisBox = new ThetisBox;
  var formTag = "<form action=\"\" onsubmit=\"doAddHolidays(this); return false;\">";
  thetisBox.setFormTag(formTag);
  thetisBox.setAdditionalParams(new Array("authenticity_token=<%= form_authenticity_token %>"));
  var cap = "<%= t('schedule.specify_holidays_info1') %><br/>"
            + "<div style='text-indent:20px'><%= t('schedule.specify_holidays_info2') %></div>"
  thetisBox.show("CENTER", "540,200", "TEXTAREA", "", cap, "");
}

function _addHolidays(val)
{
  if (val == null) {
    return false;
  }
  var lines = val.split("\n");
  if (lines == null) {
    return false;
  }

  var list = _z("holidays");
  var holidays = new Array();

  for (var i=0; i < lines.length; i++) {
    lines[i] = trim(removeCtrlChar(lines[i]));
    if (lines[i].length <= 0) {
      continue;
    }
    var date = null;
    var name = null;
    var tokens = lines[i].split(",");
    if (tokens != null) {
      try {
        date = trim(tokens[0]);
        if (date.match(/^[0-9][0-9][0-9][0-9]-[01]?[0-9]-[0-3]?[0-9]$/)) {
          date_params = date.split("-");
          date = new Date(date_params[0], parseInt(date_params[1], 10)-1, date_params[2]);
          tokens.shift();
          name = trim(tokens.join(","));
        }
      } catch (e) {}
    }
    if (date == null || name == null || name.length <= 0) {
      msg("<%= t('msg.format_invalid') %>: "+lines[i]);
      return false;
    }
    date = getDateString(date);
    holidays.push(new Array(date, name));
  }
  return true;
}

function removeHolidays()
{
  var sel_num = getListSelected(_z("holidays")).length;
  if (sel_num <= 0) {
    return;
  }
  confm(sel_num + "<%= t('msg.confirm_to_delete_num', :name => t('msg.holidays')) %>", "_removeHolidays()");
}

function _removeHolidays()
{
  var thetisBoxProgress = prog("TOP-RIGHT");

  new Ajax.Updater(
          "div_holidays",
          document.form_holidays.action,
          {
            asynchronous:true,
            evalScripts:false,
            parameters:Form.serialize(document.form_holidays)+"&authenticity_token=<%= form_authenticity_token %>",
            onComplete:function(request) {
              thetisBoxProgress.remove();
              request.responseText.evalScripts();
            }
          }
        );
}

</script>

