
<table id="tree_main" width="100%" cellspacing="0" cellpadding="0" style="background-color:#8DB7EB; border:solid 2px; border-top-color:lavender; border-left-color:lavender; border-bottom-color:dimgray; border-right-color:dimgray;"> 
  <tr>
    <td style="padding:5px 0px;">
      <table width="100%" cellspacing="0" cellpadding="0">
        <tr>
          <td align="left" width="20%" nowrap style="padding:0px 10px; border-right:solid 1px gray;">
            <input type="button" value="<%= t('btn.get_mails') %>" onclick="getMails();" style="width:80px;" />
            <input type="button" value="<%= t('btn.create_mail') %>" onclick="doCreateMail();"  style="width:80px;" />
            <input type="button" value="<%= t('btn.address_book') %>" onclick="showAddressBook();" style="width:80px;" />
          </td>
          <td id="btnbox_handled" align="left" width="30%" nowrap style="padding:0px 10px; border-right:solid 1px gray;">
            <input type="button" value="<%= t('btn.reply') %>" onclick="doReplyMail(false);" style="width:80px;" />
            <input type="button" value="<%= t('btn.reply_to_all') %>" onclick="doReplyMail(true);" style="width:80px;" />
            <input type="button" value="<%= t('btn.forward') %>" onclick="doForwardMail();" style="width:80px;" /> 
            <input type="button" value="<%= t('btn.edit_new') %>" onclick="doEditMail('duplicate');" style="width:80px;" />
            <input type="button" value="<%= t('btn.save') %>" onclick="doDownloadMail();" style="width:80px;" />
          </td>
          <td id="btnbox_draft" align="left" width="10%" nowrap style="display:none; padding:0px 10px; border-right:solid 1px gray;">
            <input type="button" value="<%= t('btn.edit') %>" onclick="doEditMail('send');" style="width:80px;" />
          </td>
          <td align="left" nowrap style="padding:0px 10px;">
<!--
            <input type="button" value="<%= t('btn.move') %>" onclick="doMoveMail();" style="width:80px;" /> 
            <input type="button" value="<%= t('btn.delete') %>" onclick="doDeleteMail();" style="width:80px;" />
-->
          </td>
        </tr>
      </table>
    </td>
  </tr> 
  <tr>
    <td align="center">

      <table width="100%" cellspacing="0" cellpadding="0" style="background-color:white;">
        <tr>
          <td id="td_tree" valign="top">
            <table width="100%" height="100%" cellspacing="0" cellpadding="0">
              <tr>
                <td valign="top" style="border:inset 2px silver; padding:0px;">
                  <%= form_tag( {:controller => 'mail_folders', :action => 'show_tree'}, :method => 'post', :name => 'form_folder_tree') %>
                    <div id="divMailTree" style="overflow:auto;"><div id="mailTree" style="text-align:left; margin:10px;"></div></div>
                    <input type='hidden' name='selKeeper' id='selKeeper' value='' /> 
                  </form>
                </td>
              </tr>
              <tr height="40">
                <td align="center" valign="middle" style="background-color:aliceblue;">
                  <a href="#" onclick="showAccountSetting(false); return false;">
                    <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/config.gif">
                    <%= t('btn.account_setting') %>
                  </a>
<%
=begin
%>
#                  <%
#                  exist_xtypes = []
#                  MailAccount.find_all("user_id=#{@login_user.id}").each do |mail_account|
#                    exist_xtypes << mail_account.xtype
#                  end
#
#                  unless ([MailAccount::XTYPE_INTERNET, MailAccount::XTYPE_INTRANET] - exist_xtypes).empty?
#                  %>
#                  <% end %>
<%
=end
%>
                  &nbsp;
                  <a href="#" onclick="showAccountSetting(true); return false;">
                    <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/file_add.gif">
                    <%= t('btn.add') %>
                  </a>
                </td>
              </tr>
            </table>
          </td>

          <td id="drag_v_border" width="5" valign="middle" style="background-color:#8DB7EB; cursor:w-resize;">
            <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/grip_vertical.png">
          </td>

          <td id="td_view" valign="top">
            <table width="100%" cellspacing="0" cellpadding="0">
              <tr>
                <td align="center" valign="top" style="border:inset 2px silver;">
                  <div id="div_mails" width="100%" style="overflow:auto;">&nbsp;</div>
                </td>
              </tr>
              <tr style="height:5px">
                <td id="drag_h_border" align="center" valign="middle" style="background-color:#8DB7EB; cursor:s-resize; line-height:5px;">
                  <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/grip_horizontal.png" style="vertical-align:top; height:5px;">
                </td>
              </tr>
              <tr>
                <td align="center" style="border:inset 2px silver;">
                  <div id="div_mail_content"></div>
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </td>
  </tr>
  <tr height="20">
    <td style="padding:3px 0px;">
      <table width="100%" cellspacing="0" cellpadding="0">
        <tr>
          <td width="15%" align="left" nowrap style="color:white; text-indent:20px;"><b><%= t('cap.mail_folders') %></b></td>
          <td width="40%" align="left" nowrap style="padding:0px 10px; border-right:solid 1px gray;">
            <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/mail/tree_mail_open.gif">
            &nbsp;
            <input type="button" value="<%= t('btn.new') %>" onclick="doCreate();" style="width:80px;" />
            <input type="button" value="<%= t('btn.rename') %>" onclick="doRename();" style="width:80px;" />
            <input type="button" value="<%= t('btn.move') %>" onclick="doMove();" style="width:80px;" />
            <input type="button" value="<%= t('btn.delete') %>" onclick="doDelete();" style="width:80px;" />
          </td>
          <td width="5%" align="left" nowrap style="padding:0px 10px; border-right:solid 1px gray;">
            <input type="button" value="<%= t('btn.empty') %>" onclick="doEmpty();" style="width:80px;" />
          </td>
          <td width="40%" align="left" nowrap style="padding:0px 10px;">
            <input type="button" value="<%= t('btn.order') %>" onclick="onOrderFoldersClicked();" style="width:80px;" />
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>


<%
unless @folder_tree.nil?
  @folder_tree.each do |parent_id, child_folders|
    child_folders.each do |folder|
%>
  <span id="xtype_<%= folder.id %>" style="display:none;"><%= folder.xtype %></span>
<%
    end
  end
end
%>
  <span id="xtype_0" style="display:none;"></span>

<%= draggable_element('drag_v_border', :revert => false, :constraint => '"horizontal"') %>
<%= draggable_element('drag_h_border', :revert => false, :constraint => '"vertical"') %>

<script type="text/javascript">

var BorderDragObserver = Class.create();
BorderDragObserver.prototype = {
  initialize: function() {
  },
  onStart: function(eventName, draggable, event) {
    if (!is_MS && !is_Opera) {
      if (draggable.element.id == "drag_v_border") {
        var divMailTree = _z("divMailTree");
        var td_tree = _z("td_tree");
        var td_view = _z("td_view");
        var div_mails = _z("div_mails");
        var div_mail_content = _z("div_mail_content");

        var orgWidthMailTree = divMailTree.offsetWidth;
        var orgWidthMails = div_mails.offsetWidth;

        draggable.options.snap = function(x, y) {
            var leftWidth = orgWidthMailTree + x;
            var rightWidth = orgWidthMails - x;
            if (leftWidth < 100 && x < 0) {
              return [100-orgWidthMailTree, y];
            } else if (rightWidth < 100 && x > 0) {
              return [orgWidthMails-100, y];
            }
            divMailTree.style.width = leftWidth + "px";
            td_tree.style.width = leftWidth + "px";

            div_mails.style.width = rightWidth + "px";
            div_mail_content.style.width = div_mails.style.width;
            td_view.style.width = rightWidth + "px";
            return [x, y];
        };
      } else if (draggable.element.id == "drag_h_border") {
        var div_mails = _z("div_mails");
        var div_mail_content = _z("div_mail_content");
        var mail_body_view = _z("mail_body_view");

        var orgHeightMails = div_mails.offsetHeight;
        var orgHeightMailContent = div_mail_content.offsetHeight;

        draggable.options.snap = function(x, y) {
          var upperHeight = orgHeightMails + y;
          var lowerHeight = orgHeightMailContent - y;
          if (upperHeight < 10 && y < 0) {
            return [x, 10-orgHeightMails];
          } else if (lowerHeight < 10 && y > 0) {
            return [x, orgHeightMailContent-10];
          }
          div_mails.style.height = upperHeight + "px";
          div_mail_content.style.height = lowerHeight + "px";
          if (mail_body_view) {
            mail_body_view.style.height = (mail_body_view.offsetHeight - y) + "px";
          }
          return [x, y];
        };
      }
    }
  },
  onDrag: function(eventName, draggable, event) {
    if (is_MS || is_Opera) {
      if (draggable.element.id == "drag_v_border") {
        var divMailTree = _z("divMailTree");
        var td_tree = _z("td_tree");
        var td_view = _z("td_view");
        var div_mails = _z("div_mails");
        var div_mail_content = _z("div_mail_content");

        var orgWidthMailTree = divMailTree.offsetWidth;
        var orgWidthMails = div_mails.offsetWidth;

        draggable.options.snap = function(x, y) {
            var leftWidth = orgWidthMailTree + x;
            var rightWidth = orgWidthMails - x;
            if (leftWidth < 100 && x < 0) {
              return [100-orgWidthMailTree, y];
            } else if (rightWidth < 100 && x > 0) {
              return [orgWidthMails-100, y];
            }
            divMailTree.style.width = leftWidth + "px";
            td_tree.style.width = leftWidth + "px";

            div_mails.style.width = rightWidth + "px";
            div_mail_content.style.width = div_mails.style.width;
            td_view.style.width = rightWidth + "px";
            return [x, y];
        };
      } else if (draggable.element.id == "drag_h_border") {
        var div_mails = _z("div_mails");
        var div_mail_content = _z("div_mail_content");

        var orgHeightMails = div_mails.offsetHeight;
        var orgHeightMailContent = div_mail_content.offsetHeight;

        draggable.options.snap = function(x, y) {
          var upperHeight = orgHeightMails + y;
          var lowerHeight = orgHeightMailContent - y;
          if (upperHeight < 10 && y < 0) {
            return [x, 10-orgHeightMails];
          } else if (lowerHeight < 10 && y > 0) {
            return [x, orgHeightMailContent-10];
          }
          div_mails.style.height = upperHeight + "px";
          div_mail_content.style.height = lowerHeight + "px";
          return [x, y];
        };
      }
    }
  },
  onEnd: function(eventName, draggable, event) {
    if (draggable.element.id != "drag_v_border"
        && draggable.element.id != "drag_h_border") {
      return;
    }
    if (!is_MS && !is_Opera) {
      draggable.options.snap = false;
    }
  }
}
Draggables.addObserver( new BorderDragObserver() );


<% if params[:tips]=='true' and !@mail_accounts.empty? %>
function showTips()
{
  tips("<%= t('mail.info_to_update') %>");
}
<% end %>

var folderAccountsHash = {};

function getMailAccountId(folder_id)
{
  return folderAccountsHash[folder_id];
}

function getCurrentFolderId()
{
  var folder_id = document.form_folder_tree.selKeeper.value.split(":")[1];

  return folder_id;
}

function onLoadSub()
{
  <%
  figure = @login_user.get_figure
  mail_user_open = THETIS_RELATIVE_URL_ROOT + "/images/#{figure}.png"
  mail_user_close = THETIS_RELATIVE_URL_ROOT + "/images/#{figure}.png"
  %>
  var folderImgs = new Array(
                      <% icons = MailFolder.get_icons(nil) %>
                        new Array("<%= icons[1] %>", "<%= icons[2] %>"),
                      <% icons = MailFolder.get_icons(MailFolder::XTYPE_INBOX) %>
                        new Array("<%= icons[1] %>", "<%= icons[2] %>"),
                      <% icons = MailFolder.get_icons(MailFolder::XTYPE_SENT) %>
                        new Array("<%= icons[1] %>", "<%= icons[2] %>"),
                      <% icons = MailFolder.get_icons(MailFolder::XTYPE_DRAFTS) %>
                        new Array("<%= icons[1] %>", "<%= icons[2] %>"),
                      <% icons = MailFolder.get_icons(MailFolder::XTYPE_TRASH) %>
                        new Array("<%= icons[1] %>", "<%= icons[2] %>"),
                      <% icons = MailFolder.get_icons(MailFolder::XTYPE_ACCOUNT_ROOT) %>
                        new Array("<%= icons[1] %>", "<%= icons[2] %>"),
                        new Array("<%= mail_user_open %>", "<%= mail_user_close %>")
                      );
  var array = new Array(new Array("0", " <%= @login_user.get_name %>", "", "selectFolder('0');", 6 /* img_idx */));
  var firstMenuId = ThetisBox.buildTree("", array, null, "mailTree", "selKeeper", folderImgs);
  <%
  folder_accounts_h = {}
  unless @folder_tree.nil?
    @folder_tree.each do |parent_id, child_folders|
  %>
  array = new Array(
    <%
    count = 0
    child_folders.each do |folder|

      case folder.xtype
        when MailFolder::XTYPE_INBOX
          img_idx = 1
        when MailFolder::XTYPE_SENT
          img_idx = 2
        when MailFolder::XTYPE_DRAFTS
          img_idx = 3
        when MailFolder::XTYPE_TRASH
          img_idx = 4
        when MailFolder::XTYPE_ACCOUNT_ROOT
          img_idx = 5
        else
          img_idx = 0
      end

      if folder.xtype == MailFolder::XTYPE_ACCOUNT_ROOT
        folder_accounts_h[folder.id] = folder.mail_account_id
      else
        folder_accounts_h[folder.id] = folder_accounts_h[parent_id.to_i]
      end

      folder_name = folder.name
      if (folder_name.nil? or folder_name.empty?) \
          and (folder.xtype == MailFolder::XTYPE_ACCOUNT_ROOT)
        folder_name = MailAccount.get_title(folder.mail_account_id)
      end
    %>
    new Array("<%= folder.id %>", " <%= folder_name %>", "", "selectFolder('<%= folder.id %>');", <%= img_idx %>)
    <%
      count += 1
      if count < child_folders.length
    %>
    ,
    <%
      end
    end
    %>
        );
  ThetisBox.buildTree("<%= parent_id %>", array, null, "mailTree", "selKeeper", folderImgs, false);
  <%
    end
  end
  %>

  <%
  folder_accounts_h.each do |folder_id, mail_account_id|
    next if mail_account_id.nil?
  %>
  folderAccountsHash["<%= folder_id %>"] = <%= mail_account_id %>;
  <%
  end
  %>

<% unless session[:mailfolder_id].nil? or session[:mailfolder_id].empty? %>
  var menuId = "a_mailTree:<%= session[:mailfolder_id] %>";
  ThetisBox.selectTree("selKeeper", menuId, null, true);
  if (ThetisBox.isSelectedTree("selKeeper", menuId)) {
    selectFolder(<%= session[:mailfolder_id] %>);
//    doUpdateMails(<%= session[:mailfolder_id] %>, false);
  }
<% end %>

<% if @mail_accounts.empty? %>
  showAccountSetting(true);
<% end %>
}

function doUpdatePage()
{
  var addParams = new Array();
<% unless params[:mail_account_xtype].nil? %>
  addParams.push("mail_account_xtype=<%= params[:mail_account_xtype] %>");
<% end %>

  prog("TOP-RIGHT");
  location.href = "<%= url_for(:controller => 'mail_folders', :action => 'show_tree') %>?"+addParams.join("&");
}

function getMails()
{
<% if @mail_accounts.empty? %>
  msg("<%= t('msg.configure_mail_account') %>");
<% else %>
<%
=begin
%>
#  if (document.form_folder_tree.selKeeper.value == "") {
#    <%
#    inbox = MailFolder.get_for(@login_user, @mail_account.id, MailFolder::XTYPE_INBOX)
#    %>
#    var menuId = "a_mailTree:<%= inbox.id %>";
#    ThetisBox.selectTree("selKeeper", menuId, null, true);
#  }
<%
=end
%>
  var folder_id = getCurrentFolderId();

  doUpdateMails(folder_id, true);
<% end %>
}

function checkName(val)
{
  var val = trim(val, false);

  if (val.charAt(0) == '$') {
    msg("<%= t('folder.reserved_name') %>");
    return false;
  }
  if (val.indexOf('/') >= 0) {
    msg("<%= t('folder.reserved_char') %>");
    return false;
  }
  return true;
}

function doCreate()
{
  if (document.form_folder_tree.selKeeper.value == "") {
    msg("<%= t('folder.select_parent') %>");
    return;
  }
  var folder_id = getCurrentFolderId();

  if (folder_id == "0") {
    msg("<%= t('mail_folder.root_cannot_have_folders') %>");
    return;
  }

  ThetisBox.openTree("mailTree:"+folder_id, true);

  var thetisBox = new ThetisBox;
  thetisBox.progress = true;
  thetisBox.setFormTag("<form action=\"<%= url_for(:controller => 'mail_folders', :action => 'create') %>\" method=\"post\" onsubmit=\"if(!checkName(this.thetisBoxEdit.value)){return false;} new Ajax.Updater('mailTree:"+folder_id+"', this.action, {asynchronous:true, evalScripts:true, insertion:Insertion.Bottom, onComplete:function(request){__thetisBoxProgress.remove();}, parameters:Form.serialize(this)}); return false;\">");
  var addParams = new Array();
<% unless params[:mail_account_xtype].nil? %>
  addParams.push("mail_account_xtype=<%= params[:mail_account_xtype] %>");
<% end %>
  var mail_account_id = getMailAccountId(folder_id);
  if (mail_account_id) {
    addParams.push("mail_account_id="+mail_account_id);
  }
  addParams.push("selectedFolderId="+folder_id);
  addParams.push("authenticity_token=<%= form_authenticity_token %>");
  thetisBox.setAdditionalParams(addParams);
  thetisBox.show("CENTER", "", "INPUT", "", "<%= t('folder.specify_name') %>", "");
}

function doRename()
{
  if (document.form_folder_tree.selKeeper.value == "") {
    msg("<%= t('folder.select') %>");
    return;
  }
  var folder_id = getCurrentFolderId();

  if (folder_id == "0") {
    msg("<%= t('folder.root_folder_restricted') %>");
    return;
  }
  var xtype = _z("xtype_"+folder_id).innerHTML;
  if (xtype != "") {
    msg("<%= t('msg.predetermined_folder_restricted') %>");
    return;
  }

  ThetisBox.openTree("mailTree:"+folder_id, true);

  var thetisBox = new ThetisBox;
  thetisBox.progress = true;
  thetisBox.setFormTag("<form action=\"<%= url_for(:controller => 'mail_folders', :action => 'rename') %>?id="+folder_id+"\" method=\"post\" onsubmit=\"if(!checkName(this.thetisBoxEdit.value)){return false;} new Ajax.Updater('a_mailTree:"+folder_id+"', this.action, {asynchronous:true, evalScripts:true, onComplete:function(request){__thetisBoxProgress.remove();}, parameters:Form.serialize(this)}); return false;\">");
  var addParams = new Array();
<% unless params[:mail_account_xtype].nil? %>
  addParams.push("mail_account_xtype=<%= params[:mail_account_xtype] %>");
<% end %>
  addParams.push("selectedFolderId="+folder_id);
  addParams.push("authenticity_token=<%= form_authenticity_token %>");
  thetisBox.setAdditionalParams(addParams);
  var name = trim(_z("mailTree:"+folder_id+"_name").innerHTML);
  thetisBox.show("CENTER", "", "INPUT", "", "<%= t('folder.specify_name') %>", name);
}

function doDelete()
{
  if (document.form_folder_tree.selKeeper.value == "") {
    msg("<%= t('folder.select') %>");
    return;
  }
  var folder_id = getCurrentFolderId();

  if (folder_id == "0") {
    msg("<%= t('folder.root_folder_restricted') %>");
    return;
  }
  var xtype = _z("xtype_"+folder_id).innerHTML;
  if (xtype != 0 ) {
    msg("<%= t('msg.predetermined_folder_restricted') %>");
    return;
  }

  ThetisBox.openTree("mailTree:"+folder_id, true);

  var name = trim(_z("mailTree:"+folder_id+"_name").innerHTML);
  confm("<%= t('paren.square.left') %>"+name+"<%= t('msg.confirm_to_delete') %>", "_doDelete("+folder_id+")");
}

function _doDelete(folder_id)
{
  var addParams = new Array();
  addParams.push("id="+folder_id);
  addParams.push("authenticity_token=<%= form_authenticity_token %>");
  var mail_account_id = getMailAccountId(folder_id);
  if (mail_account_id) {
    addParams.push("mail_account_id="+mail_account_id);
  }

  var thetisBox = prog("TOP-RIGHT");
  new Ajax.Request(
              "<%= url_for(:controller => 'mail_folders', :action => 'destroy') %>",
              {
                method:"post",
                parameters:Form.serialize(document.form_folder_tree)+"&"+addParams.join("&"),
                asynchronous:true,
                evalScripts:true,
                onComplete:function(request){
                  thetisBox.remove();
                  if (request.responseText == "") {
                    removeElem(_z("base_mailTree:"+folder_id));
                    document.form_folder_tree.selKeeper.value = "";
                    clearMails();
                  }
                  request.responseText.evalScripts();
                }
              }
            );
}

function doMove()
{
  if (document.form_folder_tree.selKeeper.value == "") {
    msg("<%= t('folder.select') %>");
    return;
  }
  var folder_id = getCurrentFolderId();

  if (folder_id == "0") {
    msg("<%= t('folder.root_folder_restricted') %>");
    return;
  }

  var xtype = _z("xtype_"+folder_id).innerHTML;
  if (xtype != 0 ) {
    msg("<%= t('msg.predetermined_folder_restricted') %>");
    return;
  }

  ThetisBox.openTree("mailTree:"+folder_id, true);

  var thetisBox = new ThetisBox;
  thetisBox.progress = true;
  var addParams = new Array();
<% unless params[:mail_account_xtype].nil? %>
  addParams.push("mail_account_xtype=<%= params[:mail_account_xtype] %>");
<% end %>
  addParams.push("id="+folder_id);
  addParams.push("authenticity_token=<%= form_authenticity_token %>");
  thetisBox.setAdditionalParams(addParams);
  thetisBox.show("CENTER", "", "TREE", "<%= url_for(:controller => 'mail_folders', :action => 'move') %>", "<%= t('folder.select_dest')%>", "");
  thetisBox.setTree("<%= url_for(:controller => 'mail_folders', :action => 'ajax_get_tree') %>?id="+folder_id, "0");
}

function selectFolder(folder_id)
{
  doUpdateMails(folder_id, false);
}

function doUpdateMails(folder_id, do_pop)
{
  var addParams = new Array();
  addParams.push("id="+folder_id);

  var mail_account_id = getMailAccountId(folder_id);
  if (mail_account_id) {
    addParams.push("mail_account_id="+mail_account_id);
  }
  if (do_pop) {
    addParams.push("pop=true");
  }
  doUpdateViewMails("get", "<%= url_for(:controller => 'mail_folders', :action => 'get_mails') %>", addParams);
}

function showMail(email_id)
{
  var addParams = new Array();
  addParams.push("id="+email_id);

  doUpdateViewMailContent("<%= url_for(:controller => 'mail_folders', :action => 'get_mail_content') %>", addParams);
}

function doUpdateViewMailContent(action, addParams)
{
  if (!addParams) {
    addParams = new Array();
  }
  var thetisBox = prog("TOP-RIGHT");
  new Ajax.Updater(
                "div_mail_content",
                action,
                {
                  method: "get",
                  asynchronous: true,
                  evalScripts: true,
                  onComplete: function(request){ thetisBox.remove(); },
                  parameters: addParams.join("&")
                }
              );
}

function clearMails()
{
  clearMailContent();

  _z("div_mails").innerHTML = "";
}

function clearMailContent()
{
  _z("div_mail_content").innerHTML = "";

  if (_z("selected_row"))
  {
    var sel_tr = _z("selected_row").value;
    if (sel_tr != "") {
      set_tr_bgcolor(_z(sel_tr), ((sel_tr.indexOf("_on")>=0)?"gainsboro":"white"));
      _z("selected_row").value = "";
    }
  }
}

function doUpdateViewMails(method, action, addParams)
{
  removeHeaderInfo();
  clearMailContent();

  if (!addParams) {
    addParams = new Array();
  }
  if (method == "post") {
    addParams.push("authenticity_token=<%= form_authenticity_token %>");
  }

  var thetisBox = prog("TOP-RIGHT");
  new Ajax.Updater(
                "div_mails",
                action,
                {
                  method: method,
                  parameters: addParams.join("&"),
                  asynchronous: true,
                  evalScripts: true,
                  onComplete: function(request){ thetisBox.remove(); },
                }
              );
}

function doCreateMail()
{
  showMailForm("<%= url_for(:controller => 'send_mails', :action => 'new') %>", true);
}

function doEditMail(mode)
{
  var sel_tr = getSelectedRow();
  if (!sel_tr)
    return;

  var email_id = sel_tr.split("_")[1];
  showMailForm("<%= url_for(:controller => 'send_mails', :action => 'edit') %>?id="+email_id+"&mode="+mode, false);
}

function doReplyMail(to_all)
{
  doEditMail(to_all ? 'reply_to_all' : 'reply');
}

function doForwardMail()
{
  doEditMail('forward');
}

var thetisBoxMailForm = null;
var _need_update = false;

function showMailForm(action, is_new)
{
<% if @mail_accounts.empty? %>
  msg("<%= t('msg.configure_mail_account') %>");
<% else %>
  if (thetisBoxMailForm != null){
    msg("<%= t('msg.cannot_edit_multiple') %>");
    return;
  }

  _need_update = false;

  var thetisBoxProgress = prog("CENTER");

  thetisBoxMailForm = new ThetisBox;
  var on_close_func = function(){
                        thetisBoxMailForm = null;
                        if (_need_update) {
                          var folder_id = getCurrentFolderId();
                          if (folder_id) {
                            doUpdateMails(folder_id, false);
                          }
                        }
                      };
  thetisBoxMailForm.setOnClose(on_close_func);
  if (is_new) {
    thetisBoxMailForm.title = "<%= t('cap.new_mail') %>";
  } else {
    thetisBoxMailForm.title = "<%= t('cap.edit_mail') %>";
  }

  var addParams = new Array();
  var folder_id = getCurrentFolderId();
  var mail_account_id = getMailAccountId(folder_id);
  if (mail_account_id) {
    addParams.push("mail_account_id="+mail_account_id);
  }

  new Ajax.Request(
          action,
          {
            method:"get",
            parameters:addParams.join("&"),
            asynchronous:true,
            evalScripts:true,
            onComplete:function(request) {
                thetisBoxMailForm.show(
                          "CENTER",
                          mainWidth*80/100+"," + mainHeight*90/100,
                          "TRAY",
                          "",
                          "<input type='button' value='<%= t('mail.send') %>' style='width:80px; height:24px;' onclick='doSend();'/>"
                            +"&nbsp;<input type='button' value='<%= t('btn.save') %>' style='width:80px; height:24px;' onclick='doSave(false);'/>",
                          request.responseText
                        );
                thetisBoxProgress.remove();
                request.responseText.evalScripts();
              }
          }
        );
<% end %>
}

function getSelectedRow()
{
  if (!_z("selected_row") || _z("selected_row").value == "") {
    msg("<%= t('msg.select_mail') %>");
    return null;
  }
  return _z("selected_row").value;
}

<%
=begin
%>
# function doDeleteMail()
# {
#   var folder_id = getCurrentFolderId();
# 
#   var sel_tr = getSelectedRow();
#   if (!sel_tr)
#     return;
# 
#   var email_id = sel_tr.split("_")[1];
# 
#   var title = "";
# 
#   var cnt = _z(sel_tr).childNodes.length;
# 
#   for (var i=0; i < cnt; i++) {
#     if (_z(sel_tr).childNodes[i].title != null) {
#       title = _z(sel_tr).childNodes[i].title;
#       if (title.length <= 0) {
#         title = "<%= t('cap.subject') %><%= t('paren.not_specified') %>";
#       }
#       break;
#     }
#   }
# 
#   confm("<%= t('paren.square.left') %>"+title+"<%= t('msg.confirm_to_delete') %>", "_doDeleteMail("+email_id+", "+folder_id+")");
# }
# 
# function _doDeleteMail(email_id, folder_id)
# {
#   var addParams = new Array();
#   addParams.push("id="+email_id);
#   addParams.push("folder_id="+folder_id);
# 
#   var mail_account_id = getMailAccountId(folder_id);
#   if (mail_account_id) {
#     addParams.push("mail_account_id="+mail_account_id);
#   }
# 
#   doUpdateViewMails("get", "<%= url_for(:controller => 'mail_folders', :action => 'ajax_delete_mail') %>", addParams);
# }
# 
# function doMoveMail()
# {
#   var sel_tr = getSelectedRow();
#   if (!sel_tr)
#     return;
# 
#   var email_id = sel_tr.split("_")[1];
#   var folder_id = getCurrentFolderId();
# 
#   var thetisBox = new ThetisBox;
#   thetisBox.progress = true;
#   var addParams = new Array();
# <% unless params[:mail_account_xtype].nil? %>
#   addParams.push("mail_account_xtype=<%= params[:mail_account_xtype] %>");
# <% end %>
#   addParams.push("id="+email_id);
#   addParams.push("authenticity_token=<%= form_authenticity_token %>");
#   thetisBox.setAdditionalParams(addParams);
#   thetisBox.show("CENTER", "", "TREE", "<%= url_for(:controller => 'mail_folders', :action => 'move_mail') %>", "<%= t('folder.select_dest')%>", "");
#   thetisBox.setTree("<%= url_for(:controller => 'mail_folders', :action => 'ajax_get_tree') %>?id="+folder_id, "0");
# }
<%
=end
%>

function doEmpty()
{
  if (document.form_folder_tree.selKeeper.value == "") {
    msg("<%= t('folder.select') %>");
    return;
  }
  var folder_id = getCurrentFolderId();

  if (folder_id == "0") {
    msg("<%= t('msg.predetermined_folder_restricted') %>");
    return;
  }
  var xtype = _z("xtype_"+folder_id).innerHTML;
  if (xtype == "<%= MailFolder::XTYPE_ACCOUNT_ROOT %>") {
    msg("<%= t('msg.predetermined_folder_restricted') %>");
    return;
  }

  confm("<%= t('mail.confirm_to_empty') %>", "_doEmpty("+folder_id+")");
}

function _doEmpty(folder_id)
{
  var addParams = new Array();
  addParams.push("id="+folder_id);

  var mail_account_id = getMailAccountId(folder_id);
  if (mail_account_id) {
    addParams.push("mail_account_id="+mail_account_id);
  }

  doUpdateViewMails("get", "<%= url_for(:controller => 'mail_folders', :action => 'empty') %>", addParams);
}


var thetisBoxFoldersOrder = null;

function onOrderFoldersClicked()
{
  var folder_id = getCurrentFolderId();
  if (!folder_id) {
    return;
  }

  if (thetisBoxFoldersOrder != null) {
    thetisBoxFoldersOrder.remove();
    thetisBoxFoldersOrder = null;
  }
  thetisBoxFoldersOrder = new ThetisBox;

  var addParams = new Array();
  addParams.push("id="+folder_id);

  var thetisBoxProgress = prog("TOP-RIGHT");
  new Ajax.Request(
              "<%= url_for(:controller => 'mail_folders', :action => 'get_folders_order') %>",
              {
                method:"get",
                asynchronous:true,
                evalScripts:true,
                parameters:addParams.join("&"),
                onComplete:function(request){
                  thetisBoxProgress.remove();

                  thetisBoxFoldersOrder.title = "<%= t('btn.order') %>";
                  thetisBoxFoldersOrder.show(
                            "CENTER",
                            "480,+280",
                            "TRAY",
                            "",
                            "",
                            request.responseText.stripScripts()
                          );
                  request.responseText.evalScripts();
                }
              }
            );
}

function doDownloadMail()
{
  var sel_tr = getSelectedRow();
  if (!sel_tr)
    return;

  var email_id = sel_tr.split("_")[1];
  location.href = "<%= url_for(:controller => 'mail_folders', :action => 'get_mail_raw') %>?id="+email_id;
}

function showAddressBook()
{
  var thetisBox = new ThetisBox;
  thetisBox.title = "<%= t('address.book') %>";
  thetisBox.bgcolor_title = "limegreen";
  thetisBox.bgcolor_body = "lightcyan";

  thetisBox.show(
            "CENTER",
            (mainWidth*80/100)+','+(mainHeight*90/100),
            "IFRAME",
            "",
            "",
            "<%= url_for(:controller => 'addressbook', :action => 'list', :user_id => (@login_user.nil?)?(nil):(@login_user.id)) %>"
          );
}

var thetisBoxAccount = null;

function showAccountSetting(is_new)
{
  var folder_id = getCurrentFolderId();
  var mail_account_id = getMailAccountId(folder_id);

  if (!is_new) {
    if (!folder_id || !mail_account_id) {
      msg("<%= t('msg.select_account') %>");
      return;
    }
  }

  var thetisBoxProgress = prog("CENTER");

  if (thetisBoxAccount != null){
    thetisBoxAccount.remove();
    thetisBoxAccount = null;
  }

  thetisBoxAccount = new ThetisBox;
  thetisBoxAccount.title = "<%= t('btn.account_setting') %>";
  thetisBoxAccount.setOnClose = "thetisBoxAccount=null;";

  var addParams = new Array();
<% unless params[:mail_account_xtype].nil? %>
  addParams.push("mail_account_xtype=<%= params[:mail_account_xtype] %>");
<% end %>

  var action = null;
  if (is_new) {
    addParams.push("xtype=<%= params[:mail_account_xtype] %>");
    action = "<%= url_for(:controller => 'mail_accounts', :action => 'new') %>";
  } else {
    addParams.push("id=" + mail_account_id);
    action = "<%= url_for(:controller => 'mail_accounts', :action => 'edit') %>"
  }

  new Ajax.Request(
          action,
          {
            method:"get",
            parameters:addParams.join("&"),
            asynchronous:true,
            evalScripts:true,
            onComplete:function(request) {
                thetisBoxAccount.show(
                          "CENTER",
                          mainWidth*70/100+"," + mainHeight*90/100,
                          "TRAY",
                          "",
                          "",
                          request.responseText
                        );
                thetisBoxProgress.remove();
                request.responseText.evalScripts();
              }
          }
        );
}

var thetisBoxHeaderInfo = null;

function removeHeaderInfo()
{
  if (thetisBoxHeaderInfo != null) {
    thetisBoxHeaderInfo.remove();
    thetisBoxHeaderInfo = null;
  }
}

function showHeaderInfo(email_id, title)
{
  removeHeaderInfo();

  thetisBoxHeaderInfo = new ThetisBox;
  thetisBoxHeaderInfo.bgcolor_title = "#8DB7EB";
  thetisBoxHeaderInfo.bgcolor_body = "aliceblue";
  thetisBoxHeaderInfo.title = title;
  thetisBoxHeaderInfo.close_by_icon_button = true;
  thetisBoxHeaderInfo.show("TOP-RIGHT", "", "MESSAGE", "", _z("mail_header_"+email_id).innerHTML, "");
}

</script>
